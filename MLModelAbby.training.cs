﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MachineLearning
{
    public partial class MLModelAbby
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Company Name",outputColumnName:@"Company Name")      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Location",outputColumnName:@"Location"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Status Rocket",outputColumnName:@"Status Rocket"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Rocket",outputColumnName:@"Rocket"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Company Name",@"Location",@"Status Rocket",@"Rocket"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"Status Mission",inputColumnName:@"Status Mission"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=4,NumberOfIterations=69,MinimumExampleCountPerLeaf=28,LearningRate=0.999999776672986,LabelColumnName=@"Status Mission",FeatureColumnName=@"Features",ExampleWeightColumnName=null,Booster=new GradientBooster.Options(){SubsampleFraction=0.561184660401046,FeatureFraction=0.71912114245576,L1Regularization=2.52440523946575E-10,L2Regularization=0.588444715747378},MaximumBinCountPerFeature=395}))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
